#include<iostream>
using namespace std;

/*
案例描述：

假设有 NN 盏灯（NN 为不大于 50005000 的正整数），从 11 到 NN 按顺序依次编号，初始时全部处于开启状态；有 MM 个人（MM 为不大于 NN 的正整数）也从 11 到 MM 依次编号。

第一个人（11 号）将灯全部关闭，第二个人（22 号）将编号为 22 的倍数的灯打开，第三个人（33 号）将编号为 33 的倍数的灯做相反处理（即，将打开的灯关闭，将关闭的灯打开）。依照编号递增顺序，以后的人都和 33 号一样，将凡是自己编号倍数的灯做相反处理。

请问：当第 MM 个人操作之后，哪几盏灯是关闭的，按从小到大输出其编号，其间用空格间隔
*/

int main()
{
    int N, M;
    cin >> N >> M;
    int open[5000] = { 0 };
    int A[5000];
    for (int i = 0; i < N; i++)
    {
        A[i] = i + 1;
        open[i] = -1;
    }
    for (int j = 0; j < N; j++)
    {
        for (int i = 2; i <= M; i++)
        {
            if (A[j] % i == 0)
            {
                open[j] = -open[j];
            }
        }
    }
    for (int i = 0; i < N; i++)
    {
        if (open[i] == -1)
        {
            cout << A[i]<<" ";
        }
     
    }
    return 0;
}